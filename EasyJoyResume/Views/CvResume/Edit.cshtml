@{
    Layout = "~/Views/Shared/_LayoutResumeEdit.cshtml";
    EasyJoyResume.Models.ViewModel.ResumeEdit Resume = ViewBag.ResumeEdit; 
}
<div class="jyCv-baseStyle"
     id="resume_base"
     data_color=@Resume.data_color
     data_font_name=@Resume.data_font_name
     data_font_size=@Resume.data_font_size
     data_line_height=@Resume.data_line_height
     data_font_type=@Resume.data_font_type
     resume_sort=@Resume.resume_sort
     wap_resume_sort=@Resume.wap_resume_sort
     template_set=@Resume.template_set
     data_itemid=@ViewBag.ItemId
     data_modal_margin=@Resume.data_modal_margin>
    <!--封面模块-->
    <div class="jyCv-cover @Resume.coverModel.CoverShow" id="resume_cover">
        <div class="coverItem  moduleItem">
            <div class="baseItem-toolbar">
                <span class="edit"></span>
                <span class="handle ui-sortable-handle"></span>
                <span class="add save_opt"></span>
                <span class="change_style"></span>
                <span class="set">
                    <div class="set-con">
                        <div class="inner clearfix">
                            <div class="set-list hiddenTitle save_opt"><i>隐藏栏目标题</i><s></s></div>
                            <div class="set-list hiddenTime save_opt"><i>隐藏时间模块</i><s></s></div>
                            <div class="set-list hiddenText save_opt"><i>隐藏描述模块</i><s></s></div>
                            <!--<div class="set-list changeTitle save_opt"><i>修改栏目标题</i><a class="change">修改</a></div>-->
                            <div class="set-list recovery_style save_opt"><i>恢复初始样式</i><a class="recovery ">恢复</a></div>
                            <div class="set-list"><i class="noChange">删除当前模块</i><a class="delete">删除</a></div>
                        </div>
                    </div>
                </span>
            </div>
            <dl>
                <dt><div data-textlang="cover" contenteditable="false">封面</div></dt>
                <dd>
                    <div class="cover-con">
                        @foreach (var item in Resume.coverModel.ResumeCover)
                        {
                            <div class="cover-list cover-name moduleItemList">
                                <a class="jyfont divIconFont">@item.icon</a>
                                <div contenteditable="true">@item.content</div>
                                <a class="delete"></a>
                            </div>
                        }
                    </div>
                </dd>
            </dl>
        </div>
    </div>
    <!--自荐书模块-->
    <div class="jyCv-letter @Resume.letterModel.LetterShow" id="resume_letter">
        <div class="letterItem moduleItem">
            <dl>
                <dt><div data-textlang="letter" contenteditable="false">自荐信</div></dt>
                <dd>
                    <div data-placeholder="在这里添加描述" contenteditable="true">
                        @Html.Raw(Resume.letterModel.LetterContent)
                    </div>
                </dd>
            </dl>
        </div>
    </div>
    <div class="jyCv-resume clearfix">
        <div class="jyCv-baseTop">
            @{
                if (Resume.sort.top.Count > 0)
                {
                    foreach (var item in Resume.sort.top)
                    {
                        @Html.Action("ResumeModule", "CvResume", new { item, Resume })
                    }

                }
            }
        </div>
        <div class="jyCv-baseLeft ui-sortable" id="foo">
            @{
                if (Resume.sort.left.Count > 0)
                {
                    foreach (var item in Resume.sort.left)
                    {
                        @Html.Action("ResumeModule", new { item, Resume })
                    }

                }
            }
        </div>
        <div class="jyCv-baseRight ui-sortable" id="bar">
            @{
                if (Resume.sort.right.Count > 0)
                {
                    foreach (var item in Resume.sort.right)
                    {
                        @Html.Action("ResumeModule", new { item, Resume })
                    }

                }
            }
        </div>
        <div class="jyCv-baseBottom">
            @{
                if (Resume.sort.bottom.Count > 0)
                {
                    foreach (var item in Resume.sort.bottom)
                    {
                        @Html.Action("ResumeModule", new { item, Resume })
                    }

                }
            }
        </div>
    </div>
</div>
<script>

            if (typeof cvresume != "undefined") {
                cvresume.main.resume_draw(@ViewBag.ItemId , 0, 1097704, '');
                cvresume.main.set_language(@Resume.resume_language);
                cvresume.info.resumecontentid = 0;//内容简历模板id
                cvresume.main.template_set(@ViewBag.TemplateSet, 0);
            }
            // 对应简历模板的个人标签、块距生效js代码（只应用在文档简历）
            var _mobans_v620 = ["WM0008", "JM0289", "MR0031", "MR0029"];
            if ($.inArray("JM0369", _mobans_v620) != -1) {//当前模板块距调节无意义
                //隐藏块距功能
                $("#setStyleModal").find(".fgsz-modalmargin").addClass("hidden");
            }
            // 对应简历模板的个人标签、块距生效js代码（只应用在文档简历）
            var _mobans_v620 = ["WM0008", "JM0289", "MR0031", "MR0029"];
            if ($.inArray("JM0203", _mobans_v620) != -1) {//当前模板块距调节无意义
                //隐藏块距功能
                $("#setStyleModal").find(".fgsz-modalmargin").addClass("hidden");
            }
</script>